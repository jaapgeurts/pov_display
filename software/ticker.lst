gplink-1.5.0 #1285
Copyright (c) 1998-2016 gputils project
Listing File Generated: 01/11/2020  09:44:22 PM


Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.9.0 #11195 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC port for the 14-bit core
                                           ;--------------------------------------------------------
                                           ;	.file	"ticker.c"
                                           	list	p=16f676
                                           	radix dec
                                           	include "p16f676.inc"
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F676 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                           ;--------------------------------------------------------
                                           ; config word(s)
                                           ;--------------------------------------------------------
002007   3fb4     addlw   0xb4             	__config 0x3fb4
                                           ;--------------------------------------------------------
                                           ; external declarations
                                           ;--------------------------------------------------------
                                           	extern	_STATUSbits
                                           	extern	_PORTAbits
                                           	extern	_PORTCbits
                                           	extern	_INTCONbits
                                           	extern	_PIR1bits
                                           	extern	_T1CONbits
                                           	extern	_CMCONbits
                                           	extern	_ADCON0bits
                                           	extern	_OPTION_REGbits
                                           	extern	_TRISAbits
                                           	extern	_TRISCbits
                                           	extern	_PIE1bits
                                           	extern	_PCONbits
                                           	extern	_OSCCALbits
                                           	extern	_ANSELbits
                                           	extern	_WPUbits
                                           	extern	_WPUAbits
                                           	extern	_IOCbits
                                           	extern	_IOCAbits
                                           	extern	_VRCONbits
                                           	extern	_EECON1bits
                                           	extern	_ADCON1bits
                                           	extern	_INDF
                                           	extern	_TMR0
                                           	extern	_PCL
                                           	extern	_STATUS
                                           	extern	_FSR
                                           	extern	_PORTA
                                           	extern	_PORTC
                                           	extern	_PCLATH
                                           	extern	_INTCON
                                           	extern	_PIR1
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_T1CON
                                           	extern	_CMCON
                                           	extern	_ADRESH
                                           	extern	_ADCON0
                                           	extern	_OPTION_REG
                                           	extern	_TRISA
                                           	extern	_TRISC
                                           	extern	_PIE1
                                           	extern	_PCON
                                           	extern	_OSCCAL
                                           	extern	_ANSEL
                                           	extern	_WPU
                                           	extern	_WPUA
                                           	extern	_IOC
                                           	extern	_IOCA
                                           	extern	_VRCON
                                           	extern	_EEDAT
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_ADRESL
                                           	extern	_ADCON1
                                           	extern	__mulchar
                                           	extern	__gptrget1
                                           	extern	___sdcc_saved_fsr
                                           	extern	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; global declarations
                                           ;--------------------------------------------------------
                                           	global	_main
                                           	global	_TIMER_START
                                           	global	_scancol
                                           	global	_pos
                                           	global	_index
                                           	global	_subindex
                                           	global	_message
                                           	global	_letters

                                           	global PSAVE
                                           	global SSAVE
                                           	global WSAVE
                                           	global STK12
                                           	global STK11
                                           	global STK10
                                           	global STK09
                                           	global STK08
                                           	global STK07
                                           	global STK06
                                           	global STK05
                                           	global STK04
                                           	global STK03
                                           	global STK02
                                           	global STK01
                                           	global STK00

                                           sharebank udata_ovr 0x0020
                                           PSAVE	res 1
                                           SSAVE	res 1
                                           WSAVE	res 1
                                           STK12	res 1
                                           STK11	res 1
                                           STK10	res 1
                                           STK09	res 1
                                           STK08	res 1
                                           STK07	res 1
                                           STK06	res 1
                                           STK05	res 1
                                           STK04	res 1
                                           STK03	res 1
                                           STK02	res 1
                                           STK01	res 1
                                           STK00	res 1

                                           ;--------------------------------------------------------
                                           ; global definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; absolute symbol definitions
                                           ;--------------------------------------------------------
                                           ;--------------------------------------------------------
                                           ; compiler-defined variables
                                           ;--------------------------------------------------------
                                           UDL_ticker_0	udata
                                           r0x1006	res	1
                                           r0x1007	res	1
                                           r0x1008	res	1
                                           r0x1009	res	1
                                           r0x100A	res	1
                                           ;--------------------------------------------------------
                                           ; initialized data
                                           ;--------------------------------------------------------

                                           ID_ticker_0	idata
                                           _TIMER_START
                                           	db	0x4b


                                           ID_ticker_1	idata
                                           _scancol
                                           	db	0x00


                                           ID_ticker_2	idata
                                           _pos
                                           	db	0x89


                                           ID_ticker_3	idata
                                           _index
                                           	db	0x00


                                           ID_ticker_4	idata
                                           _subindex
                                           	db	0x00


                                           ID_ticker_5	code
                                           _message
0002ea   3405     retlw   0x05             	retlw 0x05
0002eb   340e     retlw   0x0e             	retlw 0x0e
0002ec   340d     retlw   0x0d             	retlw 0x0d
0002ed   3413     retlw   0x13             	retlw 0x13
0002ee   340e     retlw   0x0e             	retlw 0x0e
0002ef   3412     retlw   0x12             	retlw 0x12
0002f0   3424     retlw   0x24             	retlw 0x24
0002f1   3408     retlw   0x08             	retlw 0x08
0002f2   3402     retlw   0x02             	retlw 0x02
0002f3   3413     retlw   0x13             	retlw 0x13


                                           ID_ticker_6	code
                                           _letters
000056   347c     retlw   0x7c             	retlw 0x7c
000057   3412     retlw   0x12             	retlw 0x12
000058   3411     retlw   0x11             	retlw 0x11
000059   3412     retlw   0x12             	retlw 0x12
00005a   347c     retlw   0x7c             	retlw 0x7c
00005b   3400     retlw   0x00             	retlw 0x00
00005c   3436     retlw   0x36             	retlw 0x36
00005d   3449     retlw   0x49             	retlw 0x49
00005e   3449     retlw   0x49             	retlw 0x49
00005f   347f     retlw   0x7f             	retlw 0x7f
000060   3441     retlw   0x41             	retlw 0x41
000061   3400     retlw   0x00             	retlw 0x00
000062   3422     retlw   0x22             	retlw 0x22
000063   3441     retlw   0x41             	retlw 0x41
000064   3441     retlw   0x41             	retlw 0x41
000065   3422     retlw   0x22             	retlw 0x22
000066   341c     retlw   0x1c             	retlw 0x1c
000067   3400     retlw   0x00             	retlw 0x00
000068   341c     retlw   0x1c             	retlw 0x1c
000069   3422     retlw   0x22             	retlw 0x22
00006a   3441     retlw   0x41             	retlw 0x41
00006b   347f     retlw   0x7f             	retlw 0x7f
00006c   3441     retlw   0x41             	retlw 0x41
00006d   3400     retlw   0x00             	retlw 0x00
00006e   347f     retlw   0x7f             	retlw 0x7f
00006f   3449     retlw   0x49             	retlw 0x49
000070   3449     retlw   0x49             	retlw 0x49
000071   3449     retlw   0x49             	retlw 0x49
000072   3441     retlw   0x41             	retlw 0x41
000073   3400     retlw   0x00             	retlw 0x00
000074   3401     retlw   0x01             	retlw 0x01
000075   3409     retlw   0x09             	retlw 0x09
000076   3409     retlw   0x09             	retlw 0x09
000077   3409     retlw   0x09             	retlw 0x09
000078   347f     retlw   0x7f             	retlw 0x7f
000079   3400     retlw   0x00             	retlw 0x00
00007a   343a     retlw   0x3a             	retlw 0x3a
00007b   3449     retlw   0x49             	retlw 0x49
00007c   3449     retlw   0x49             	retlw 0x49
00007d   3441     retlw   0x41             	retlw 0x41
00007e   343e     retlw   0x3e             	retlw 0x3e
00007f   3400     retlw   0x00             	retlw 0x00
000080   347f     retlw   0x7f             	retlw 0x7f
000081   3408     retlw   0x08             	retlw 0x08
000082   3408     retlw   0x08             	retlw 0x08
000083   3408     retlw   0x08             	retlw 0x08
000084   347f     retlw   0x7f             	retlw 0x7f
000085   3400     retlw   0x00             	retlw 0x00
000086   3400     retlw   0x00             	retlw 0x00
000087   3441     retlw   0x41             	retlw 0x41
000088   347f     retlw   0x7f             	retlw 0x7f
000089   3441     retlw   0x41             	retlw 0x41
00008a   3400     retlw   0x00             	retlw 0x00
00008b   3400     retlw   0x00             	retlw 0x00
00008c   3401     retlw   0x01             	retlw 0x01
00008d   343f     retlw   0x3f             	retlw 0x3f
00008e   3441     retlw   0x41             	retlw 0x41
00008f   3440     retlw   0x40             	retlw 0x40
000090   3430     retlw   0x30             	retlw 0x30
000091   3400     retlw   0x00             	retlw 0x00
000092   3441     retlw   0x41             	retlw 0x41
000093   3422     retlw   0x22             	retlw 0x22
000094   3414     retlw   0x14             	retlw 0x14
000095   3408     retlw   0x08             	retlw 0x08
000096   347f     retlw   0x7f             	retlw 0x7f
000097   3400     retlw   0x00             	retlw 0x00
000098   3440     retlw   0x40             	retlw 0x40
000099   3440     retlw   0x40             	retlw 0x40
00009a   3440     retlw   0x40             	retlw 0x40
00009b   3440     retlw   0x40             	retlw 0x40
00009c   347f     retlw   0x7f             	retlw 0x7f
00009d   3400     retlw   0x00             	retlw 0x00
00009e   347f     retlw   0x7f             	retlw 0x7f
00009f   3402     retlw   0x02             	retlw 0x02
0000a0   340c     retlw   0x0c             	retlw 0x0c
0000a1   3402     retlw   0x02             	retlw 0x02
0000a2   347f     retlw   0x7f             	retlw 0x7f
0000a3   3400     retlw   0x00             	retlw 0x00
0000a4   347f     retlw   0x7f             	retlw 0x7f
0000a5   3406     retlw   0x06             	retlw 0x06
0000a6   3408     retlw   0x08             	retlw 0x08
0000a7   3430     retlw   0x30             	retlw 0x30
0000a8   347f     retlw   0x7f             	retlw 0x7f
0000a9   3400     retlw   0x00             	retlw 0x00
0000aa   343e     retlw   0x3e             	retlw 0x3e
0000ab   3441     retlw   0x41             	retlw 0x41
0000ac   3441     retlw   0x41             	retlw 0x41
0000ad   3441     retlw   0x41             	retlw 0x41
0000ae   343e     retlw   0x3e             	retlw 0x3e
0000af   3400     retlw   0x00             	retlw 0x00
0000b0   3406     retlw   0x06             	retlw 0x06
0000b1   3409     retlw   0x09             	retlw 0x09
0000b2   3409     retlw   0x09             	retlw 0x09
0000b3   3409     retlw   0x09             	retlw 0x09
0000b4   347f     retlw   0x7f             	retlw 0x7f
0000b5   3400     retlw   0x00             	retlw 0x00
0000b6   345e     retlw   0x5e             	retlw 0x5e
0000b7   3421     retlw   0x21             	retlw 0x21
0000b8   3451     retlw   0x51             	retlw 0x51
0000b9   3441     retlw   0x41             	retlw 0x41
0000ba   343e     retlw   0x3e             	retlw 0x3e
0000bb   3400     retlw   0x00             	retlw 0x00
0000bc   3446     retlw   0x46             	retlw 0x46
0000bd   3429     retlw   0x29             	retlw 0x29
0000be   3419     retlw   0x19             	retlw 0x19
0000bf   3409     retlw   0x09             	retlw 0x09
0000c0   347f     retlw   0x7f             	retlw 0x7f
0000c1   3400     retlw   0x00             	retlw 0x00
0000c2   3432     retlw   0x32             	retlw 0x32
0000c3   3449     retlw   0x49             	retlw 0x49
0000c4   3449     retlw   0x49             	retlw 0x49
0000c5   3449     retlw   0x49             	retlw 0x49
0000c6   3426     retlw   0x26             	retlw 0x26
0000c7   3400     retlw   0x00             	retlw 0x00
0000c8   3401     retlw   0x01             	retlw 0x01
0000c9   3401     retlw   0x01             	retlw 0x01
0000ca   347f     retlw   0x7f             	retlw 0x7f
0000cb   3401     retlw   0x01             	retlw 0x01
0000cc   3401     retlw   0x01             	retlw 0x01
0000cd   3400     retlw   0x00             	retlw 0x00
0000ce   343f     retlw   0x3f             	retlw 0x3f
0000cf   3440     retlw   0x40             	retlw 0x40
0000d0   3440     retlw   0x40             	retlw 0x40
0000d1   3440     retlw   0x40             	retlw 0x40
0000d2   343f     retlw   0x3f             	retlw 0x3f
0000d3   3400     retlw   0x00             	retlw 0x00
0000d4   340f     retlw   0x0f             	retlw 0x0f
0000d5   3430     retlw   0x30             	retlw 0x30
0000d6   3440     retlw   0x40             	retlw 0x40
0000d7   3430     retlw   0x30             	retlw 0x30
0000d8   340f     retlw   0x0f             	retlw 0x0f
0000d9   3400     retlw   0x00             	retlw 0x00
0000da   347f     retlw   0x7f             	retlw 0x7f
0000db   3420     retlw   0x20             	retlw 0x20
0000dc   3418     retlw   0x18             	retlw 0x18
0000dd   3420     retlw   0x20             	retlw 0x20
0000de   347f     retlw   0x7f             	retlw 0x7f
0000df   3400     retlw   0x00             	retlw 0x00
0000e0   3463     retlw   0x63             	retlw 0x63
0000e1   3414     retlw   0x14             	retlw 0x14
0000e2   3408     retlw   0x08             	retlw 0x08
0000e3   3414     retlw   0x14             	retlw 0x14
0000e4   3463     retlw   0x63             	retlw 0x63
0000e5   3400     retlw   0x00             	retlw 0x00
0000e6   3407     retlw   0x07             	retlw 0x07
0000e7   3408     retlw   0x08             	retlw 0x08
0000e8   3478     retlw   0x78             	retlw 0x78
0000e9   3408     retlw   0x08             	retlw 0x08
0000ea   3407     retlw   0x07             	retlw 0x07
0000eb   3400     retlw   0x00             	retlw 0x00
0000ec   3443     retlw   0x43             	retlw 0x43
0000ed   3445     retlw   0x45             	retlw 0x45
0000ee   3449     retlw   0x49             	retlw 0x49
0000ef   3451     retlw   0x51             	retlw 0x51
0000f0   3461     retlw   0x61             	retlw 0x61
0000f1   3400     retlw   0x00             	retlw 0x00
0000f2   343e     retlw   0x3e             	retlw 0x3e
0000f3   3451     retlw   0x51             	retlw 0x51
0000f4   3449     retlw   0x49             	retlw 0x49
0000f5   3445     retlw   0x45             	retlw 0x45
0000f6   343e     retlw   0x3e             	retlw 0x3e
0000f7   3400     retlw   0x00             	retlw 0x00
0000f8   3444     retlw   0x44             	retlw 0x44
0000f9   3442     retlw   0x42             	retlw 0x42
0000fa   347f     retlw   0x7f             	retlw 0x7f
0000fb   3440     retlw   0x40             	retlw 0x40
0000fc   3440     retlw   0x40             	retlw 0x40
0000fd   3400     retlw   0x00             	retlw 0x00
0000fe   3462     retlw   0x62             	retlw 0x62
0000ff   3451     retlw   0x51             	retlw 0x51
000100   3449     retlw   0x49             	retlw 0x49
000101   3449     retlw   0x49             	retlw 0x49
000102   3446     retlw   0x46             	retlw 0x46
000103   3400     retlw   0x00             	retlw 0x00
000104   3422     retlw   0x22             	retlw 0x22
000105   3441     retlw   0x41             	retlw 0x41
000106   3449     retlw   0x49             	retlw 0x49
000107   3449     retlw   0x49             	retlw 0x49
000108   3436     retlw   0x36             	retlw 0x36
000109   3400     retlw   0x00             	retlw 0x00
00010a   3418     retlw   0x18             	retlw 0x18
00010b   3414     retlw   0x14             	retlw 0x14
00010c   3412     retlw   0x12             	retlw 0x12
00010d   347f     retlw   0x7f             	retlw 0x7f
00010e   3410     retlw   0x10             	retlw 0x10
00010f   3400     retlw   0x00             	retlw 0x00
000110   3447     retlw   0x47             	retlw 0x47
000111   3445     retlw   0x45             	retlw 0x45
000112   3445     retlw   0x45             	retlw 0x45
000113   3429     retlw   0x29             	retlw 0x29
000114   3411     retlw   0x11             	retlw 0x11
000115   3400     retlw   0x00             	retlw 0x00
000116   343c     retlw   0x3c             	retlw 0x3c
000117   344a     retlw   0x4a             	retlw 0x4a
000118   3449     retlw   0x49             	retlw 0x49
000119   3449     retlw   0x49             	retlw 0x49
00011a   3430     retlw   0x30             	retlw 0x30
00011b   3400     retlw   0x00             	retlw 0x00
00011c   3403     retlw   0x03             	retlw 0x03
00011d   3401     retlw   0x01             	retlw 0x01
00011e   3479     retlw   0x79             	retlw 0x79
00011f   3405     retlw   0x05             	retlw 0x05
000120   3403     retlw   0x03             	retlw 0x03
000121   3400     retlw   0x00             	retlw 0x00
000122   3436     retlw   0x36             	retlw 0x36
000123   3449     retlw   0x49             	retlw 0x49
000124   3449     retlw   0x49             	retlw 0x49
000125   3449     retlw   0x49             	retlw 0x49
000126   3436     retlw   0x36             	retlw 0x36
000127   3400     retlw   0x00             	retlw 0x00
000128   3406     retlw   0x06             	retlw 0x06
000129   3449     retlw   0x49             	retlw 0x49
00012a   3449     retlw   0x49             	retlw 0x49
00012b   3429     retlw   0x29             	retlw 0x29
00012c   341e     retlw   0x1e             	retlw 0x1e
00012d   3400     retlw   0x00             	retlw 0x00
00012e   3400     retlw   0x00             	retlw 0x00
00012f   3400     retlw   0x00             	retlw 0x00
000130   3400     retlw   0x00             	retlw 0x00
000131   3400     retlw   0x00             	retlw 0x00
000132   3400     retlw   0x00             	retlw 0x00
000133   3400     retlw   0x00             	retlw 0x00
000134   340c     retlw   0x0c             	retlw 0x0c
000135   341e     retlw   0x1e             	retlw 0x1e
000136   343c     retlw   0x3c             	retlw 0x3c
000137   341e     retlw   0x1e             	retlw 0x1e
000138   340c     retlw   0x0c             	retlw 0x0c
000139   3400     retlw   0x00             	retlw 0x00

                                           ;--------------------------------------------------------
                                           ; overlayable items in internal ram 
                                           ;--------------------------------------------------------
                                           ;	udata_ovr
                                           ;--------------------------------------------------------
                                           ; reset vector 
                                           ;--------------------------------------------------------
                                           STARTUP	code 0x0000
000000   0000     nop                      	nop
                                           	pagesel __sdcc_gsinit_startup
000001   293a     goto    0x013a           	goto	__sdcc_gsinit_startup
                                           ;--------------------------------------------------------
                                           ; interrupt and initialization code
                                           ;--------------------------------------------------------
                                           c_interrupt	code	0x0004
                                           __sdcc_interrupt:
                                           ;***
                                           ;  pBlock Stats: dbName = I
                                           ;***
                                           ;functions called:
                                           ;   _showled
                                           ;   _showled
                                           ;; Starting pCode block
                                           _isr_int:
                                           ; 0 exit points
                                           ;	.line	233; "ticker.c"	static  void isr_int(void) __interrupt(0) {
000004   00a2     movwf   0x22             	MOVWF	WSAVE
000005   0e03     swapf   0x03, 0x0        	SWAPF	STATUS,W
000006   0183     clrf    0x03             	CLRF	STATUS
000007   00a1     movwf   0x21             	MOVWF	SSAVE
000008   080a     movf    0x0a, 0x0        	MOVF	PCLATH,W
000009   018a     clrf    0x0a             	CLRF	PCLATH
00000a   00a0     movwf   0x20             	MOVWF	PSAVE
00000b   0804     movf    0x04, 0x0        	MOVF	FSR,W
00000c   00cc     movwf   0x4c             	MOVWF	___sdcc_saved_fsr
                                           ;	.line	235; "ticker.c"	TMR0 = TIMER_START; // writing to TMR0 clears the prescaler counter
00000d   0846     movf    0x46, 0x0        	MOVF	_TIMER_START,W
00000e   1283     bcf     0x03, 0x5        	BANKSEL	_TMR0
00000f   0081     movwf   0x01             	MOVWF	_TMR0
                                           ;	.line	238; "ticker.c"	if (INTE && INTF) // External Interrupt
000010   1e0b     btfss   0x0b, 0x4        	BTFSS	_INTCONbits,4
000011   2832     goto    0x0032           	GOTO	_00140_DS_
000012   1c8b     btfss   0x0b, 0x1        	BTFSS	_INTCONbits,1
000013   2832     goto    0x0032           	GOTO	_00140_DS_
                                           ;;unsigned compare: left < lit(0x8A=138), size=1
                                           ;	.line	242; "ticker.c"	if (scancol < XWIDTH && TIMER_START < 255)
000014   308a     movlw   0x8a             	MOVLW	0x8a
000015   0247     subwf   0x47, 0x0        	SUBWF	_scancol,W
000016   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000017   281e     goto    0x001e           	GOTO	_00125_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffccb4dad00
                                           ;;unsigned compare: left < lit(0xFF=255), size=1
000018   30ff     movlw   0xff             	MOVLW	0xff
000019   0246     subwf   0x46, 0x0        	SUBWF	_TIMER_START,W
00001a   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00001b   281e     goto    0x001e           	GOTO	_00125_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffccb4dad00
                                           ;	.line	243; "ticker.c"	TIMER_START++;
00001c   0ac6     incf    0x46, 0x1        	INCF	_TIMER_START,F
00001d   2826     goto    0x0026           	GOTO	_00126_DS_
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;unsigned compare: left >= lit(0x8B=139), size=1
                                           _00125_DS_:
                                           ;	.line	244; "ticker.c"	else if (scancol > XWIDTH && TIMER_START > 0)
00001e   308b     movlw   0x8b             	MOVLW	0x8b
00001f   0247     subwf   0x47, 0x0        	SUBWF	_scancol,W
000020   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000021   2826     goto    0x0026           	GOTO	_00126_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffccb4dad00
000022   3000     movlw   0x00             	MOVLW	0x00
                                           ;	.line	245; "ticker.c"	TIMER_START--;
000023   0446     iorwf   0x46, 0x0        	IORWF	_TIMER_START,W
                                           ;	.line	254; "ticker.c"	if (pos == 0) {
000024   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000025   03c6     decf    0x46, 0x1        	DECF	_TIMER_START,F
                                           _00126_DS_:
000026   3000     movlw   0x00             	MOVLW	0x00
000027   0448     iorwf   0x48, 0x0        	IORWF	_pos,W
000028   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000029   282c     goto    0x002c           	GOTO	_00129_DS_
                                           ;	.line	255; "ticker.c"	pos = XWIDTH;
00002a   308a     movlw   0x8a             	MOVLW	0x8a
00002b   00c8     movwf   0x48             	MOVWF	_pos
                                           _00129_DS_:
                                           ;	.line	258; "ticker.c"	pos--;
00002c   03c8     decf    0x48, 0x1        	DECF	_pos,F
                                           ;	.line	260; "ticker.c"	scancol = 0;
00002d   01c7     clrf    0x47             	CLRF	_scancol
                                           ;	.line	262; "ticker.c"	INTF = 0; // clear interrupt flag
00002e   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
00002f   108b     bcf     0x0b, 0x1        	BCF	_INTCONbits,1
                                           ;	.line	263; "ticker.c"	T0IF = 0; // also clear timer flag in case it occurred
000030   110b     bcf     0x0b, 0x2        	BCF	_INTCONbits,2
000031   284c     goto    0x004c           	GOTO	_00143_DS_
                                           _00140_DS_:
                                           ;	.line	264; "ticker.c"	} else if (T0IE && T0IF) // Timer Overflow
000032   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
000033   1e8b     btfss   0x0b, 0x5        	BTFSS	_INTCONbits,5
000034   284c     goto    0x004c           	GOTO	_00143_DS_
000035   1d0b     btfss   0x0b, 0x2        	BTFSS	_INTCONbits,2
000036   284c     goto    0x004c           	GOTO	_00143_DS_
                                           ;;unsigned compare: left < lit(0xFF=255), size=1
                                           ;	.line	267; "ticker.c"	if (scancol < 255) {
000037   30ff     movlw   0xff             	MOVLW	0xff
000038   0247     subwf   0x47, 0x0        	SUBWF	_scancol,W
000039   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00003a   283d     goto    0x003d           	GOTO	_00131_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffccb4dad00
                                           ;	.line	269; "ticker.c"	showled();
                                           	PAGESEL	_showled
00003b   21d6     call    0x01d6           	CALL	_showled
                                           	PAGESEL	$
                                           ;	.line	271; "ticker.c"	scancol++;
00003c   0ac7     incf    0x47, 0x1        	INCF	_scancol,F
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;unsigned compare: left >= lit(0x8B=139), size=1
                                           _00131_DS_:
                                           ;	.line	274; "ticker.c"	if (scancol > XWIDTH) {
00003d   308b     movlw   0x8b             	MOVLW	0x8b
00003e   0247     subwf   0x47, 0x0        	SUBWF	_scancol,W
00003f   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000040   2844     goto    0x0044           	GOTO	_00133_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffccb4dad00
                                           ;	.line	275; "ticker.c"	PORTC = 0x3f;
000041   303f     movlw   0x3f             	MOVLW	0x3f
000042   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
000043   0087     movwf   0x07             	MOVWF	_PORTC
                                           ;;swapping arguments (AOP_TYPEs 1/3)
                                           ;;unsigned compare: left >= lit(0x8B=139), size=1
                                           _00133_DS_:
                                           ;	.line	277; "ticker.c"	if (pos > XWIDTH) {
000044   308b     movlw   0x8b             	MOVLW	0x8b
                                           ;	.line	278; "ticker.c"	RA5 = 1;
000045   0248     subwf   0x48, 0x0        	SUBWF	_pos,W
                                           ;	.line	284; "ticker.c"	T0IF = 0;
000046   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000047   284a     goto    0x004a           	GOTO	_00003_DS_
000048   1283     bcf     0x03, 0x5        	BANKSEL	_PORTAbits
000049   1685     bsf     0x05, 0x5        	BSF	_PORTAbits,5
                                           _00003_DS_:
00004a   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
00004b   110b     bcf     0x0b, 0x2        	BCF	_INTCONbits,2
                                           _00143_DS_:
                                           ;	.line	286; "ticker.c"	}
00004c   084c     movf    0x4c, 0x0        	MOVF	___sdcc_saved_fsr,W
00004d   0084     movwf   0x04             	MOVWF	FSR
00004e   0820     movf    0x20, 0x0        	MOVF	PSAVE,W
00004f   008a     movwf   0x0a             	MOVWF	PCLATH
000050   0183     clrf    0x03             	CLRF	STATUS
000051   0e21     swapf   0x21, 0x0        	SWAPF	SSAVE,W
000052   0083     movwf   0x03             	MOVWF	STATUS
000053   0ea2     swapf   0x22, 0x1        	SWAPF	WSAVE,F
000054   0e22     swapf   0x22, 0x0        	SWAPF	WSAVE,W
                                           END_OF_INTERRUPT:
000055   0009     retfie                   	RETFIE	

                                           ;--------------------------------------------------------
                                           ; code
                                           ;--------------------------------------------------------
                                           code_ticker	code
                                           ;***
                                           ;  pBlock Stats: dbName = M
                                           ;***
                                           ;has an exit
                                           ;; Starting pCode block
                                           S_ticker__main	code
                                           _main:
                                           ; 2 exit points
                                           ;	.line	292; "ticker.c"	PORTA = 0x00;
0002b1   1283     bcf     0x03, 0x5        	BANKSEL	_PORTA
0002b2   0185     clrf    0x05             	CLRF	_PORTA
                                           ;	.line	293; "ticker.c"	PORTC = 0x00;
0002b3   0187     clrf    0x07             	CLRF	_PORTC
                                           ;	.line	296; "ticker.c"	ANSEL = 0;
0002b4   1683     bsf     0x03, 0x5        	BANKSEL	_ANSEL
0002b5   0191     clrf    0x11             	CLRF	_ANSEL
                                           ;	.line	299; "ticker.c"	TRISA = 0x00; // portA as output
0002b6   0185     clrf    0x05             	CLRF	_TRISA
                                           ;	.line	300; "ticker.c"	TRISA2 = 1; // except RA2
0002b7   1505     bsf     0x05, 0x2        	BSF	_TRISAbits,2
                                           ;	.line	301; "ticker.c"	TRISC = 0x00; // portC as output
0002b8   0187     clrf    0x07             	CLRF	_TRISC
                                           ;	.line	303; "ticker.c"	GIE = 0; // disable global interrupts
0002b9   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
0002ba   138b     bcf     0x0b, 0x7        	BCF	_INTCONbits,7
                                           ;	.line	306; "ticker.c"	TMR0 = TIMER_START;
0002bb   0846     movf    0x46, 0x0        	MOVF	_TIMER_START,W
0002bc   0081     movwf   0x01             	MOVWF	_TMR0
                                           ;	.line	307; "ticker.c"	T0CS = 0; // timer clock source to internal clock,
0002bd   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REGbits
0002be   1281     bcf     0x01, 0x5        	BCF	_OPTION_REGbits,5
                                           ;	.line	309; "ticker.c"	PSA = 0; // assign prescaler to timer0
0002bf   1181     bcf     0x01, 0x3        	BCF	_OPTION_REGbits,3
                                           ;	.line	310; "ticker.c"	PS0 = 1;
0002c0   1401     bsf     0x01, 0x0        	BSF	_OPTION_REGbits,0
                                           ;	.line	311; "ticker.c"	PS1 = 0;
0002c1   1081     bcf     0x01, 0x1        	BCF	_OPTION_REGbits,1
                                           ;	.line	312; "ticker.c"	PS2 = 0; // prescaler to 4 = 1,000,000 / 4 = 250,000 Hz
0002c2   1101     bcf     0x01, 0x2        	BCF	_OPTION_REGbits,2
                                           ;	.line	314; "ticker.c"	T0IF = 0; // clear timer0 overflow flag
0002c3   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
0002c4   110b     bcf     0x0b, 0x2        	BCF	_INTCONbits,2
                                           ;	.line	315; "ticker.c"	T0IE = 1; // enable timer0 overflow interrupt
0002c5   168b     bsf     0x0b, 0x5        	BSF	_INTCONbits,5
                                           ;	.line	317; "ticker.c"	INTF = 0; // clear INT flag
0002c6   108b     bcf     0x0b, 0x1        	BCF	_INTCONbits,1
                                           ;	.line	318; "ticker.c"	INTEDG = 0; //  trigger on rising edge
0002c7   1683     bsf     0x03, 0x5        	BANKSEL	_OPTION_REGbits
0002c8   1301     bcf     0x01, 0x6        	BCF	_OPTION_REGbits,6
                                           ;	.line	319; "ticker.c"	INTE = 1; // enable external interrupt on RA2
0002c9   1283     bcf     0x03, 0x5        	BANKSEL	_INTCONbits
0002ca   160b     bsf     0x0b, 0x4        	BSF	_INTCONbits,4
                                           ;	.line	320; "ticker.c"	GIE = 1; // enable global interrupts
0002cb   178b     bsf     0x0b, 0x7        	BSF	_INTCONbits,7
                                           _00149_DS_:
                                           ;	.line	322; "ticker.c"	forever{
0002cc   2acc     goto    0x02cc           	GOTO	_00149_DS_
                                           ;	.line	326; "ticker.c"	}
0002cd   0008     return                   	RETURN	
                                           ; exit point of _main

                                           ;***
                                           ;  pBlock Stats: dbName = C
                                           ;***
                                           ;has an exit
                                           ;functions called:
                                           ;   __mulchar
                                           ;   __gptrget1
                                           ;   __mulchar
                                           ;   __gptrget1
                                           ;   __gptrget1
                                           ;   __mulchar
                                           ;   __gptrget1
                                           ;   __mulchar
                                           ;   __gptrget1
                                           ;   __gptrget1
                                           ;7 compiler assigned registers:
                                           ;   r0x1006
                                           ;   STK00
                                           ;   r0x1007
                                           ;   r0x1008
                                           ;   STK01
                                           ;   r0x1009
                                           ;   r0x100A
                                           ;; Starting pCode block
                                           S_ticker__showled	code
                                           _showled:
                                           ; 2 exit points
                                           ;	.line	205; "ticker.c"	if (scancol == pos) {
0001d6   0848     movf    0x48, 0x0        	MOVF	_pos,W
0001d7   0647     xorwf   0x47, 0x0        	XORWF	_scancol,W
0001d8   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0001d9   29dc     goto    0x01dc           	GOTO	_00106_DS_
                                           ;	.line	206; "ticker.c"	index = subindex = 0;
0001da   01ca     clrf    0x4a             	CLRF	_subindex
0001db   01c9     clrf    0x49             	CLRF	_index
                                           _00106_DS_:
                                           ;	.line	208; "ticker.c"	uint8_t pos2 = pos + index * 6 + subindex;
0001dc   0849     movf    0x49, 0x0        	MOVF	_index,W
0001dd   00bc     movwf   0x3c             	MOVWF	r0x1006
0001de   3006     movlw   0x06             	MOVLW	0x06
0001df   00af     movwf   0x2f             	MOVWF	STK00
0001e0   083c     movf    0x3c, 0x0        	MOVF	r0x1006,W
                                           	PAGESEL	__mulchar
0001e1   22ce     call    0x02ce           	CALL	__mulchar
                                           	PAGESEL	$
0001e2   00bd     movwf   0x3d             	MOVWF	r0x1007
0001e3   0848     movf    0x48, 0x0        	MOVF	_pos,W
0001e4   00bc     movwf   0x3c             	MOVWF	r0x1006
0001e5   083d     movf    0x3d, 0x0        	MOVF	r0x1007,W
0001e6   073c     addwf   0x3c, 0x0        	ADDWF	r0x1006,W
0001e7   00bd     movwf   0x3d             	MOVWF	r0x1007
0001e8   084a     movf    0x4a, 0x0        	MOVF	_subindex,W
0001e9   00bc     movwf   0x3c             	MOVWF	r0x1006
0001ea   073d     addwf   0x3d, 0x0        	ADDWF	r0x1007,W
0001eb   00bc     movwf   0x3c             	MOVWF	r0x1006
                                           ;;unsigned compare: left < lit(0x8A=138), size=1
                                           ;	.line	209; "ticker.c"	if (pos2 >= XWIDTH) {
0001ec   308a     movlw   0x8a             	MOVLW	0x8a
0001ed   023c     subwf   0x3c, 0x0        	SUBWF	r0x1006,W
0001ee   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
0001ef   29f9     goto    0x01f9           	GOTO	_00108_DS_
                                           ;;genSkipc:3257: created from rifx:0x7ffccb4dad00
                                           ;	.line	210; "ticker.c"	pos2 -= XWIDTH;
0001f0   083c     movf    0x3c, 0x0        	MOVF	r0x1006,W
0001f1   00bd     movwf   0x3d             	MOVWF	r0x1007
0001f2   3076     movlw   0x76             	MOVLW	0x76
0001f3   07bd     addwf   0x3d, 0x1        	ADDWF	r0x1007,F
                                           ;	.line	211; "ticker.c"	pos2-=3;
0001f4   083d     movf    0x3d, 0x0        	MOVF	r0x1007,W
0001f5   00be     movwf   0x3e             	MOVWF	r0x1008
0001f6   30fd     movlw   0xfd             	MOVLW	0xfd
0001f7   073e     addwf   0x3e, 0x0        	ADDWF	r0x1008,W
0001f8   00bc     movwf   0x3c             	MOVWF	r0x1006
                                           _00108_DS_:
                                           ;	.line	214; "ticker.c"	if (scancol == pos2) {
0001f9   083c     movf    0x3c, 0x0        	MOVF	r0x1006,W
0001fa   0647     xorwf   0x47, 0x0        	XORWF	_scancol,W
0001fb   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
0001fc   2a53     goto    0x0253           	GOTO	_00114_DS_
                                           ;	.line	216; "ticker.c"	uint8_t map = message[index];
0001fd   0849     movf    0x49, 0x0        	MOVF	_index,W
0001fe   3eea     addlw   0xea             	ADDLW	(_message + 0)
0001ff   00bc     movwf   0x3c             	MOVWF	r0x1006
000200   3002     movlw   0x02             	MOVLW	high (_message + 0)
000201   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000202   3e01     addlw   0x01             	ADDLW	0x01
000203   00bd     movwf   0x3d             	MOVWF	r0x1007
000204   083c     movf    0x3c, 0x0        	MOVF	r0x1006,W
000205   00ae     movwf   0x2e             	MOVWF	STK01
000206   083d     movf    0x3d, 0x0        	MOVF	r0x1007,W
000207   00af     movwf   0x2f             	MOVWF	STK00
000208   3080     movlw   0x80             	MOVLW	0x80
                                           	PAGESEL	__gptrget1
000209   2278     call    0x0278           	CALL	__gptrget1
                                           	PAGESEL	$
00020a   00be     movwf   0x3e             	MOVWF	r0x1008
                                           ;	.line	217; "ticker.c"	PORTC = letters[map][subindex] & 0b00111111;
00020b   3006     movlw   0x06             	MOVLW	0x06
00020c   00af     movwf   0x2f             	MOVWF	STK00
00020d   083e     movf    0x3e, 0x0        	MOVF	r0x1008,W
                                           	PAGESEL	__mulchar
00020e   22ce     call    0x02ce           	CALL	__mulchar
                                           	PAGESEL	$
00020f   00bc     movwf   0x3c             	MOVWF	r0x1006
000210   01bd     clrf    0x3d             	CLRF	r0x1007
000211   083c     movf    0x3c, 0x0        	MOVF	r0x1006,W
000212   3e56     addlw   0x56             	ADDLW	(_letters + 0)
000213   00be     movwf   0x3e             	MOVWF	r0x1008
000214   3000     movlw   0x00             	MOVLW	high (_letters + 0)
000215   00bf     movwf   0x3f             	MOVWF	r0x1009
000216   3000     movlw   0x00             	MOVLW	0x00
000217   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000218   0f3d     incfsz  0x3d, 0x0        	INCFSZ	r0x1007,W
000219   07bf     addwf   0x3f, 0x1        	ADDWF	r0x1009,F
00021a   084a     movf    0x4a, 0x0        	MOVF	_subindex,W
00021b   073e     addwf   0x3e, 0x0        	ADDWF	r0x1008,W
00021c   00bc     movwf   0x3c             	MOVWF	r0x1006
00021d   083f     movf    0x3f, 0x0        	MOVF	r0x1009,W
00021e   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00021f   3e01     addlw   0x01             	ADDLW	0x01
000220   00bd     movwf   0x3d             	MOVWF	r0x1007
000221   083c     movf    0x3c, 0x0        	MOVF	r0x1006,W
000222   00ae     movwf   0x2e             	MOVWF	STK01
000223   083d     movf    0x3d, 0x0        	MOVF	r0x1007,W
000224   00af     movwf   0x2f             	MOVWF	STK00
000225   3080     movlw   0x80             	MOVLW	0x80
                                           	PAGESEL	__gptrget1
000226   2278     call    0x0278           	CALL	__gptrget1
                                           	PAGESEL	$
000227   00c0     movwf   0x40             	MOVWF	r0x100A
000228   303f     movlw   0x3f             	MOVLW	0x3f
000229   0540     andwf   0x40, 0x0        	ANDWF	r0x100A,W
00022a   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
00022b   0087     movwf   0x07             	MOVWF	_PORTC
                                           ;	.line	218; "ticker.c"	RA5 = (letters[map][subindex] >> 6) & 1;
00022c   084a     movf    0x4a, 0x0        	MOVF	_subindex,W
00022d   07be     addwf   0x3e, 0x1        	ADDWF	r0x1008,F
00022e   083f     movf    0x3f, 0x0        	MOVF	r0x1009,W
00022f   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
000230   3e01     addlw   0x01             	ADDLW	0x01
000231   00bf     movwf   0x3f             	MOVWF	r0x1009
000232   083e     movf    0x3e, 0x0        	MOVF	r0x1008,W
000233   00ae     movwf   0x2e             	MOVWF	STK01
000234   083f     movf    0x3f, 0x0        	MOVF	r0x1009,W
000235   00af     movwf   0x2f             	MOVWF	STK00
000236   3080     movlw   0x80             	MOVLW	0x80
                                           	PAGESEL	__gptrget1
000237   2278     call    0x0278           	CALL	__gptrget1
                                           	PAGESEL	$
000238   00bc     movwf   0x3c             	MOVWF	r0x1006
000239   3940     andlw   0x40             	ANDLW	0x40
00023a   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00023b   3001     movlw   0x01             	MOVLW	0x01
00023c   00be     movwf   0x3e             	MOVWF	r0x1008
00023d   0c3e     rrf     0x3e, 0x0        	RRF	r0x1008,W
00023e   1803     btfsc   0x03, 0x0        	BTFSC	STATUS,0
00023f   2a42     goto    0x0242           	GOTO	_00001_DS_
000240   1283     bcf     0x03, 0x5        	BANKSEL	_PORTAbits
000241   1285     bcf     0x05, 0x5        	BCF	_PORTAbits,5
                                           _00001_DS_:
000242   1c03     btfss   0x03, 0x0        	BTFSS	STATUS,0
000243   2a46     goto    0x0246           	GOTO	_00002_DS_
000244   1283     bcf     0x03, 0x5        	BANKSEL	_PORTAbits
000245   1685     bsf     0x05, 0x5        	BSF	_PORTAbits,5
                                           _00002_DS_:
                                           ;	.line	219; "ticker.c"	subindex++;
000246   0aca     incf    0x4a, 0x1        	INCF	_subindex,F
                                           ;	.line	220; "ticker.c"	if (subindex == 6) {
000247   084a     movf    0x4a, 0x0        	MOVF	_subindex,W
000248   3a06     xorlw   0x06             	XORLW	0x06
000249   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
00024a   2a56     goto    0x0256           	GOTO	_00116_DS_
                                           ;	.line	221; "ticker.c"	subindex = 0;
00024b   01ca     clrf    0x4a             	CLRF	_subindex
                                           ;	.line	222; "ticker.c"	index++;
00024c   0ac9     incf    0x49, 0x1        	INCF	_index,F
                                           ;	.line	223; "ticker.c"	if (index == MAX_MESSAGE)
00024d   0849     movf    0x49, 0x0        	MOVF	_index,W
00024e   3a0a     xorlw   0x0a             	XORLW	0x0a
00024f   1d03     btfss   0x03, 0x2        	BTFSS	STATUS,2
000250   2a56     goto    0x0256           	GOTO	_00116_DS_
                                           ;	.line	224; "ticker.c"	index = 0;
000251   01c9     clrf    0x49             	CLRF	_index
000252   2a56     goto    0x0256           	GOTO	_00116_DS_
                                           _00114_DS_:
                                           ;	.line	228; "ticker.c"	PORTC = 0x00;
000253   1283     bcf     0x03, 0x5        	BANKSEL	_PORTC
000254   0187     clrf    0x07             	CLRF	_PORTC
                                           ;	.line	229; "ticker.c"	RA5 = 0;
000255   1285     bcf     0x05, 0x5        	BCF	_PORTAbits,5
                                           _00116_DS_:
                                           ;	.line	231; "ticker.c"	}
000256   0008     return                   	RETURN	
                                           ; exit point of _showled


                                           ;	code size estimation:
                                           ;	  223+   29 =   252 instructions (  562 byte)

                                           	end
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F877 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
                                                   LIST

                                           ;==========================================================================
                                           ; Build date : Oct 21 2015
                                           ;  MPASM PIC16F676 processor include
                                           ; 
                                           ;  (c) Copyright 1999-2015 Microchip Technology, All rights reserved
                                           ;==========================================================================

                                                   NOLIST
